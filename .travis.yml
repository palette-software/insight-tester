language: go

go:
    - 1.5

env:
    matrix:
        - GIMME_OS=darwin GIMME_ARCH=386
        - GIMME_OS=darwin GIMME_ARCH=amd64
        - GIMME_OS=linux GIMME_ARCH=386
        - GIMME_OS=linux GIMME_ARCH=amd64
        - GIMME_OS=windows GIMME_ARCH=386
        - GIMME_OS=windows GIMME_ARCH=amd64
    global:
        - secure: "iK8Zcm1f3/BbCvMgEISgZ0WvmHpk2V4EQHycZlae1hGB2Xr8R9MmIV+fu19+lBu1QOSBpXmUeVJvSwfe9sJHYTKJbcsHeGQM7AIAESvIOiIIZbEDp98WGXwEfxQ1733TgeEX10St4PK8kE3v7G+E5qYhUffjO4DLuE9BfmaQRei2BbcG382rnj9c8vYWF4O00fZEzcDvnwvD9IaeQnB4Jy4e0kkHsIJfvOkwdxbLf6amX9Q7fF7SqBnxHgmvitHef2RBMjBfjT8StUqrBoUVt93j2XXY8m6WWpggaAjilWzvb9Kw9W4XwLryqM+cMCOnbx14SxElrAmmxKjdRFPlSuAWbVaX7O5rK4aANMxXJ7paNUk9bqaWXKor+NsUQ5HC3zPHTRHsmV53J2Yd9bk7n2joAswNXvdN1+KzHY87jUbxZLSakSJ7aSW8ac8MMaUAEzmZizzmqSWBNXfpWFmqvtpjS7fP2zwWfz6f2YWIoVL0n/4+jIWJTR+Ai6fT6RDK3J+gj9A3U4KC2k328nV5mTxFB8SkqWpmJ5RUE6gtE5AZzIcba0mF3l7qKAjD3RjugnPqZ+16fmjjOM60dEeFjhkS43kHF9b7yO+Lk2l+66ruQg4pERj2TbuZqGf6kb95zcflE2vZQ5IjtsswwiDWCIoOI2Praf5UU22fcMl7lkw="
        - OWNER=palette-software
        - PACKAGE=insight-tester
        - GITHUB_REPO="https://baspeti:$GITHUB_TOKEN@github.com:$OWNER/$PACKAGE.git"
        - VERSION=v0.0
        - TAG_MESSAGE="$VERSION [ci skip][skip ci]"
        - PCKG_FILE=CURRENT_ENV_DIR.zip

# workaround for travis-ci/gimme#25 to pick up latest version of gimme and run again
before_install:
  - curl -o gimme -sL https://raw.githubusercontent.com/travis-ci/gimme/master/gimme
  - chmod u+x gimme
  - unset GOROOT GOTOOLDIR GIMME_NO_ENV_ALIAS
  - eval "$(./gimme 1.5)"
  - go version
  - go env

script:
    - cd logfilewriter
    - go install -v ./...
    - echo "git tag -a $VERSION -m $TAG_MESSAGE"
    - git tag $VERSION-lw
    - git push $GITHUB_REPO HEAD:master --force --tags

after_script:
    - cd $GOPATH/bin/
    - export CURRENT_ENV_DIR=${GIMME_OS}_${GIMME_ARCH}
    - mkdir -p $CURRENT_ENV_DIR
    - cp -f logfilewriter $CURRENT_ENV_DIR
    - zip -r $PCKG_FILE $CURRENT_ENV_DIR
    - echo "Creating Github realase..."
    - ${TRAVIS_BUILD_DIR}/release-to-github.sh
    # - export RELEASE_ID=`curl -H "Authorization: token ${GITHUB_TOKEN}" -d "{\"tag_name\": $TAG_MESSAGE}" "https://api.github.com/repos/$OWNER/$PACKAGE/releases"| jsawk "return this.id"`
    # - if [ $? -ne 0 ]; then echo "creating new release failed"; exit 10; fi
    # - echo $RELEASE_ID
    # - echo "Uploading Github release asset..."
    # - curl --progress-bar -H "Content-Type: application/octet-stream" -H "Authorization: token $GITHUB_TOKEN" --retry 3 --data-binary @$PCKG_FILE "https://uploads.github.com/repos/$OWNER/$PACKAGE/releases/$RELEASE_ID/assets?name=$PCKG_FILE"
    # - if [ $? -ne 0 ]; then echo "uploading release asset failed"; exit 10; fi

notifications:
    email: false
